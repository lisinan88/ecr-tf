# provider
variable "tfc_aws_dynamic_credentials" {
  description = "Object containing AWS dynamic credentials configuration"
  type = object({
    default = object({
      shared_config_file = string
    })
    aliases = map(object({
      shared_config_file = string
    }))
  })
}

variable "account_alias" {
  description = "The account alias where these resources reside. (prod, nonprod etc)"
  type        = string
}

variable "region" {
  description = "region of aws account where resources should be implemented"
  type        = string
}


# S3 Variables
###########################################################################
# Required S3 Bucket Module Vars:                                         #
#-------------------------------------------------------------------------#
# The following variables require consumer defined values to be provided. #
###########################################################################
variable "s3_bucket_name" {
  type        = string
  description = "The base name of the S3 bucket that is being requested. This base name can be made unique by specifing values for either the s3_bucket_prefix_list, the s3_bucket_suffix_list, or both module variables."
}



###########################################################################
# Optional S3 Bucket Module Vars:                                         #
#-------------------------------------------------------------------------#
# The following variables have default values already set by the module.  #
# They will not need to be included in a project root module variables.tf #
# file unless a non-default value needs be assigned to the variable.      #
###########################################################################
variable "enabled" {
  type        = bool
  description = "Whether or not to create the bucket."
  default     = true
}

variable "s3_versioning_enabled" {
  type        = bool
  description = "Flag to enable bucket object versioning."
  default     = false
}



variable "s3_mfa_delete" {
  type        = string
  description = "Flag to enable the requirement of MFA in order to delete a bucket, object, or disable object versioning."
  default     = "Disabled"
}

variable "s3_kms_key_arn" {
  type        = string
  description = "The key that will be used to encrypt objects within the new bucket. If the default value of AES256 is unchanged, S3 will encrypt objects with the default KMS key. If a KMS CMK ARN is provided, then S3 will encrypt objects with the specified KMS key instead."
  default     = "AES256"
}



variable "s3_bucket_policy" {
  type        = string
  description = "A policy to merge with the bucket policy.  Use %BUCKET% for bucket name"
  default     = null
}

variable "tags" {
  description = "A map of tags to add to all resources"
  type        = map(string)
  default     = {}
}

variable "s3_expiration_days" {
  description = "If set, number of days to expire objects"
  type        = number
  default     = null
}

variable "block_public_acls" {
  description = "Whether Amazon S3 should block public ACLs for this bucket."
  type        = bool
  default     = true
}

variable "block_public_policy" {
  description = "Whether Amazon S3 should block public bucket policies for this bucket."
  type        = bool
  default     = true
}

variable "ignore_public_acls" {
  description = "Whether Amazon S3 should ignore public ACLs for this bucket."
  type        = bool
  default     = true
}

variable "restrict_public_buckets" {
  description = "Whether Amazon S3 should restrict public bucket policies for this bucket."
  type        = bool
  default     = true
}


## new lifecycle configuration

variable "new_s3_lifecycle_configuration" {
  description = "The S3 replication configuration"
  type  = any
  default = []
}

variable "use_new_lifecycle_configuration" {
  description = "Set to true when we need to use the new reosurce block with enhanced filtering for replication"
  type        =  bool
  default     = false
}

#object lockc config

variable "object_lock_config" {
  description = "object lock config resource for the new bucket"
  type        =  any
  default     = null
}

# S3 access point configuration variables 
variable "s3_accesspoint_name"{
  description = "The name of s3 access point"
  type        = string 
  default     = ""
}

variable "enable_s3_access_point" {
  description = "set to true for creating S3 access points resource"
  type        = bool
  default     = false
}

variable "enable_s3_access_point_policy" {
  description = "Set to true for creating S3 access points policy resource"
  type        = bool
  default     = false
}

variable "aws_s3_access_point_policy" {
  description = "Provide the policy for s3 access points"
  type        = string
  default     = null
}

#s3 access point-VPC configuration variable
variable "vpc_id" {
  description = "Provide the VPC ID for the S3 access point"
  type        = string
  default     = ""
}

#s3 multi region access point configuration variable
variable "s3_multiregion_accesspoint_name"{
  description = "The name of S3 bucket multi region access point"
  type        = string 
  default     = ""
}

variable "enable_s3_multiregion_access_point" {
  description = "set to true for creating S3 multi region access points resource"
  type        = bool
  default     = false
}

variable "enable_s3_multiregion_access_point_policy" {
  description = "set to true for creating S3 multi-region access points policy resource"
  type        = bool
  default     = false
}

variable "aws_s3_multi_region_access_point_policy" {
  description = "Provide the policy for s3 multi region access points"
  type        = string
  default     = null
}

// S3 Intelligent tier variable cofiguration

variable "intelligent_tiering_config" {
  description = "The S3 intelligent tiering resource configuration block"
  type        = any
  default     = []
}

variable "abort_incomplete_multipart_deletion_days" {
  description = "Days after which to delete incomplete multipart uploads"
  type        = number
  default     = 7
}

// s3 bucket ownership controls

variable "object_ownership" {
  description = "Object ownership. Valid values: BucketOwnerEnforced, BucketOwnerPreferred or ObjectWriter. 'BucketOwnerEnforced': ACLs are disabled, and the bucket owner automatically owns and has full control over every object in the bucket. 'BucketOwnerPreferred': Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the bucket-owner-full-control canned ACL. 'ObjectWriter': The uploading account will own the object if the object is uploaded with the bucket-owner-full-control canned ACL."
  type        = string
  default     = "BucketOwnerPreferred"
}

# AWS S3 Express One zone storage

variable "create_one_zone_express_bucket" {
  description = "set to true for creating S3 Express One zone storage"
  type        = bool
  default     = false  
}

variable "az_id_list" {
  description = "Provide the availabilty zone id to create one zone expres bucket"
  type        = list(string)
  default     = []
}

variable "bucket_one_zone_express_force_destroy" {
  description = "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. The objects are not recoverable."
  type        = bool
  default     = false 
}

# tags
variable "dr_tier" {
  description = "Business Continuity - specify the disaster recovery tiers - Bronze, Silver, Gold, Platinum - engineering/design"
  type        = string
}

variable "cost_center" {
  description = "Governance - specifify the cost center - (8 digit integer) 12345678, 99999999 - engineering/design or alfabet"
  type        = string
}

variable "application_id" {
  description = "IT Portfolio - Map to application ID in Alfabet - App-230; app-451 - alfabet"
  type        = string
}

variable "project_name" {
  description = "IT Portfolio - Name of project/application - Found; APTOS; C360 - feed from alfabet"
  type        = string
}

variable "app_partner" {
  description = "Operations - Application partner/ distribution group - John Doe - feed from alfabet"
  type        = string
}

variable "cpm_backup" {
  description = "Operations - identify the method used for backup of this resource - policy1, policy2, policy3 - engineering/design"
  type        = string
  default     = ""
}

variable "environment" {
  description = "Operations - Which environment does this resource belong to? - (One of: dev, qa, test, staging, prod, bigdata, bigdatanonprod, bigdataprod, logging, master, networking, pcisecurenonprod, pcisecureprod, piisecurenonprod, piisecureprod, poc, security, sharedservices, nonprod) - engineering/design"
  type        = string
}

variable "compliance" {
  description = "Security+Governance - Is this resource subject to any compliance requirements? Select all that apply. - pci, sox, gdpr, pii, none - engineering/design"
  type        = string 
}


variable "brand" {
  description = "IT Portfolio - Identify which Brand this resource services - (One of: TPR, COH, KS, SW) - feed from alfabet"
  type        = string
}

variable "os" {
  description = "Operations - Which OS is installed? - (One of: n/a, \"\", win2016, win2012, rhel7.0, azlinux, container-alpine) - engineering/design"
  type        = string
  default     = null
}

variable "tf_repo" {
  description = "Operations - Which repo is this resource managed from - (Must match /^TF-AWS-.+-Root$/"
  type        = string
}

variable "fw_rule_id" {
  description = "Security+Governance - Define firewall rule id tag - '<3 letters of app id><environment><app|web|db>' like 'etlqaapp' for ETL QA environment app"
  type        = string
  default     = null
}

variable "patch_group" {
  description = "Operations - Which Patch Group in SSM does this instance belong to"
  type        = string
  default     = null
}
variable "tf_deployed_by" {
    description = "who deployed this resource"
    type        = string
}
