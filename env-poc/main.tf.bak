###############################
# Provider   #
#################################3
provider "aws" { 
  region = var.region
  shared_config_files = [var.tfc_aws_dynamic_credentials.default.shared_config_file] 
}

######################
# Data Sources:      #
######################
data "aws_caller_identity" "current" {}
data "aws_region" "current" {}

######################
# Local Variables:   #
######################
locals {
  region = data.aws_region.current.name
  s3_enabled_count       = var.enabled ? 1 : 0 
}

###############################
# Terraform Remote State:   #
#################################3
terraform {
  backend "remote" {
    hostname     = "app.terraform.io"
    organization = "TAPESTRYCN"

    workspaces {
      prefix = "tf-awscn-s3bucket-root-${var.account_alias}-${local.region}"
    }
  }
}



######################
# S3 Bucket   #
######################
#S3 Bucket Configuration-> enable SSE, Block all public access

module "s3_logs_ec2_image_builder" {    
  source                    = "app.terraform.io/TAPESTRYCN/iac-s3-module/awscn"

  count                     = local.s3_enabled_count
  s3_bucket_name            = var.s3_bucket_name
  object_ownership          = var.object_ownership
  s3_versioning_enabled     = var.s3_versioning_enabled
  s3_mfa_delete             = var.s3_mfa_delete
  s3_kms_key_arn            = var.s3_kms_key_arn
  block_public_acls         = var.block_public_acls
  block_public_policy       = var.block_public_policy
  ignore_public_acls        = var.ignore_public_acls
  restrict_public_buckets   = var.restrict_public_buckets
  use_new_lifecycle_configuration = var.use_new_lifecycle_configuration
  new_s3_lifecycle_configuration = var.new_s3_lifecycle_configuration
  intelligent_tiering_config = var.intelligent_tiering_config
  enable_s3_access_point      = var.enable_s3_access_point
  s3_accesspoint_name         = var.s3_accesspoint_name
  enable_s3_access_point_policy = var.enable_s3_access_point_policy
  aws_s3_access_point_policy  = var.aws_s3_access_point_policy
  enable_s3_multiregion_access_point = var.enable_s3_multiregion_access_point
  s3_multiregion_accesspoint_name    =  var.s3_multiregion_accesspoint_name
  tags = merge(module.tags.tags, { Name = var.s3_bucket_name })
}





# This module codifies the tags assigned to resources. Check GitHub or TFE for the most recent release of the module and replace x.x.x with that version number
module "tags" {
  source  = "app.terraform.io/TAPESTRYCN/tags-module/aws"

  dr_tier            = var.dr_tier
  cost_center        = var.cost_center
  application_id     = var.application_id
  project_name       = var.project_name
  app_partner        = var.app_partner
  cpm_backup         = var.cpm_backup
  environment        = var.environment
  compliance         = var.compliance
  brand              = var.brand
  os                 = var.os
  tf_repo            = var.tf_repo
  tf_deployed_by     = data.aws_caller_identity.current.arn
  fw_rule_id         = var.fw_rule_id
  patch_group        = var.patch_group

}